# Scoring options are 1, 2, and 4
def scoring_options(n):
    # Setting up our base cases

    # We can not get a negative score, we return 0 for negative values
    if n < 0:
        return 0

    # There is only 1 way to reach a score of 0
    if n == 0:
        return 1

    # Recursively calculate the number of ways using the
    # recurrence relation we saw earlier
    return scoring_options(n - 1) + scoring_options(n - 2) + scoring_options(n - 4)

def main():
    total_scores = [3, 5, 10, 25, 0]

    # You can uncomment the line below and check how this recursive solution causes a time-out 
    
    # total_scores.append(35)

    for i in range(len(total_scores)):
        num_ways = scoring_options(total_scores[i])
        print(i+1, ".", "\tNumber of ways to reach the score ", total_scores[i], ": ", num_ways, sep="")
        print("-" * 100)
        print()

if __name__ == '__main__':
    main()