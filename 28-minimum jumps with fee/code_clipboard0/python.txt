def min_fee(fee, n):
  #Check if the number of steps are 0
  if n < 1:
    return 0

  #calculate fee for each choice
  one_step = fee[n-1] + min_fee(fee, n - 1)
  two_step = fee[n-2] + min_fee(fee, n - 2)
  three_step = fee[n-3] + min_fee(fee, n -3 )

  #return the minimum fee from the three choices calculated above
  return min(one_step, two_step, three_step)

# Driver code
def main():
    inputs = [[[1, 2, 5, 2, 1, 2],6],[[2, 3, 4, 5],4],[[1,100,1,1,1,100,1,1,100,1],10],[[10,15,20],3],[[0,1,2,3,4,5,6,7,8],9]]

    # You can uncomment the lines below and check how this recursive solution causes a time-out
    # inputs.append([[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, \
    # 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99],100])

    for i in range(len(inputs)):
        print(i + 1, ".\t Steps:",inputs[i][1],"\n\n\t", \
                      "Fee: ",inputs[i][0],"\n\n\t",\
                         "Minimum fee:", min_fee(inputs[i][0],inputs[i][1])) 
            
        print("-" * 100)

if __name__ == '__main__':
    main()