def catalan(n):
  # base case; C(0) = 1
  if n == 0:      
    return 1
  sum = 0
  # iterate from 1...n to evaluate: C(0)*C(n-1) + C(1)*C(n-2) ... + C(n-1)*C(0)
  for i in range(n):  
    # C(i)*C(n-1-i)
    sum += (catalan(i) * catalan(n-1-i))  
  return sum

# Driver code to test the above function
if __name__ == '__main__':

  n_list = [0, 1, 2, 4, 6]
  
  # You can uncomment the line below and check how this recursive solution causes a time-out
  # n_list.append(22)

  for i in range(len(n_list)):
    print(i+1,".\tn: ", n_list[i],sep="")
    print("\n\tnth catalan number:",catalan(n_list[i]))
    print('-' * 100)